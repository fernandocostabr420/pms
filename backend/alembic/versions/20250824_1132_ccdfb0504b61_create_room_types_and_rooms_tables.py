"""create room_types and rooms tables

Revision ID: ccdfb0504b61
Revises: b132069ee1e1
Create Date: 2025-08-24 11:32:44.288894+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ccdfb0504b61'
down_revision = 'b132069ee1e1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_capacity', sa.Integer(), nullable=False),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('size_m2', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('bed_configuration', sa.JSON(), nullable=True),
    sa.Column('amenities', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('is_bookable', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_room_types_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_room_types'))
    )
    op.create_index(op.f('ix_room_types_id'), 'room_types', ['id'], unique=False)
    op.create_index(op.f('ix_room_types_name'), 'room_types', ['name'], unique=False)
    op.create_index(op.f('ix_room_types_slug'), 'room_types', ['slug'], unique=False)
    op.create_index(op.f('ix_room_types_tenant_id'), 'room_types', ['tenant_id'], unique=False)
    op.create_table('rooms',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('room_number', sa.String(length=20), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('building', sa.String(length=50), nullable=True),
    sa.Column('max_occupancy', sa.Integer(), nullable=True),
    sa.Column('bed_configuration', sa.JSON(), nullable=True),
    sa.Column('additional_amenities', sa.JSON(), nullable=True),
    sa.Column('removed_amenities', sa.JSON(), nullable=True),
    sa.Column('is_operational', sa.Boolean(), nullable=False),
    sa.Column('is_out_of_order', sa.Boolean(), nullable=False),
    sa.Column('maintenance_notes', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('housekeeping_notes', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_rooms_property_id_properties')),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name=op.f('fk_rooms_room_type_id_room_types')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_rooms_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rooms')),
    sa.UniqueConstraint('property_id', 'room_number', name='unique_room_per_property')
    )
    op.create_index(op.f('ix_rooms_floor'), 'rooms', ['floor'], unique=False)
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_index(op.f('ix_rooms_is_operational'), 'rooms', ['is_operational'], unique=False)
    op.create_index(op.f('ix_rooms_name'), 'rooms', ['name'], unique=False)
    op.create_index(op.f('ix_rooms_property_id'), 'rooms', ['property_id'], unique=False)
    op.create_index(op.f('ix_rooms_room_number'), 'rooms', ['room_number'], unique=False)
    op.create_index(op.f('ix_rooms_room_type_id'), 'rooms', ['room_type_id'], unique=False)
    op.create_index(op.f('ix_rooms_tenant_id'), 'rooms', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rooms_tenant_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_room_type_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_room_number'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_property_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_name'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_is_operational'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_floor'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_room_types_tenant_id'), table_name='room_types')
    op.drop_index(op.f('ix_room_types_slug'), table_name='room_types')
    op.drop_index(op.f('ix_room_types_name'), table_name='room_types')
    op.drop_index(op.f('ix_room_types_id'), table_name='room_types')
    op.drop_table('room_types')
    # ### end Alembic commands ###