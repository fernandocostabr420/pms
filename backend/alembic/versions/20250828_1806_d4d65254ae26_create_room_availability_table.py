"""create room availability table

Revision ID: d4d65254ae26
Revises: 0a4db33b1f10
Create Date: 2025-08-28 18:06:47.861240+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd4d65254ae26'
down_revision = '0a4db33b1f10'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room_availability',
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('is_out_of_order', sa.Boolean(), nullable=False),
    sa.Column('is_maintenance', sa.Boolean(), nullable=False),
    sa.Column('rate_override', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('min_stay', sa.Integer(), nullable=False),
    sa.Column('max_stay', sa.Integer(), nullable=True),
    sa.Column('closed_to_arrival', sa.Boolean(), nullable=False),
    sa.Column('closed_to_departure', sa.Boolean(), nullable=False),
    sa.Column('is_reserved', sa.Boolean(), nullable=False),
    sa.Column('reservation_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.String(length=1000), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], name=op.f('fk_room_availability_reservation_id_reservations')),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_room_availability_room_id_rooms')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_room_availability_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_room_availability')),
    sa.UniqueConstraint('room_id', 'date', name='unique_room_availability_per_date')
    )
    op.create_index(op.f('ix_room_availability_date'), 'room_availability', ['date'], unique=False)
    op.create_index(op.f('ix_room_availability_id'), 'room_availability', ['id'], unique=False)
    op.create_index(op.f('ix_room_availability_is_available'), 'room_availability', ['is_available'], unique=False)
    op.create_index(op.f('ix_room_availability_is_reserved'), 'room_availability', ['is_reserved'], unique=False)
    op.create_index(op.f('ix_room_availability_reservation_id'), 'room_availability', ['reservation_id'], unique=False)
    op.create_index(op.f('ix_room_availability_room_id'), 'room_availability', ['room_id'], unique=False)
    op.create_index(op.f('ix_room_availability_tenant_id'), 'room_availability', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_room_availability_tenant_id'), table_name='room_availability')
    op.drop_index(op.f('ix_room_availability_room_id'), table_name='room_availability')
    op.drop_index(op.f('ix_room_availability_reservation_id'), table_name='room_availability')
    op.drop_index(op.f('ix_room_availability_is_reserved'), table_name='room_availability')
    op.drop_index(op.f('ix_room_availability_is_available'), table_name='room_availability')
    op.drop_index(op.f('ix_room_availability_id'), table_name='room_availability')
    op.drop_index(op.f('ix_room_availability_date'), table_name='room_availability')
    op.drop_table('room_availability')
    # ### end Alembic commands ###